#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package auto
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily \small}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
DeepGreen User's Guide
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
DeepGreen DB is a MPP Database derived from the open source Greenplum Database
 project.
 DeepGreen DB implmeneted a LLVM based JIT query execution engine that dynamical
ly generate machine code for each SQL query, dramatically increases the
 performance of Greenplum Database.
 DeepGreen maintain 100% compatibility with Greenplum Database.
 User should observe no difference between DeepGreen DB and Greenplum Database
 other than the increased performance.
 Therefore, we refer user to the Greenplum project and PostgreSQL project
 for documentation.
\end_layout

\begin_layout Standard
DeepGreen DB further extends Greenplum Database by adding new data types,
 functions, external database accesses and management utilitlies.
 This document covers these features.
\end_layout

\begin_layout Section
GUCs
\end_layout

\begin_layout Standard
DeepGreen added the following GUCs,
\end_layout

\begin_layout Description
deepgreen.enable (boolean, default true).
 Enable or disable JIT engine.
 When disabled, DeepGreen DB should behave exactly the same as Greenplum.
\end_layout

\begin_layout Description
deepgreen.explain_verbosity (integer, 0, 1, or 2, default 0).
 Control the verbosity of JIT information in the output of explain analyze.
 
\end_layout

\begin_layout Description
deepgreen.threshold (integer).
 Because JIT compilation cost some time, for very short queries, the compilation
 cost will overweight the query execution.
 This GUC turns off JIT if the query optimizer decides that query execution
 cost is less this threshold.
\end_layout

\begin_layout Description
deepgreen.xdrive_host (string) Default XDrive host.
\end_layout

\begin_layout Description
deepgreen.xdrive_port (int) Defaulit XDrive port.
\end_layout

\begin_layout Description
deepgreen.version (string) Version string.
 It is readonly, cannot be set.
\end_layout

\begin_layout Description
deepgreen.rev (string) Revision string.
 It is readonly, cannot be set.
\end_layout

\begin_layout Section
Decimal64 and Decimal128
\end_layout

\begin_layout Standard
Decimal64 and Decimal128 implement the 64 and 128 bits decimal floating
 as defined in IEEE-754 2008.
 Unlike the the variable length numeric datatype, the 64/128 bits decimal
 format is much more efficient.
 Decimal64 can accurately represent 16 decimal digits and Decimal128 can
 accurately represent 34 decimal digits.
 All major arithemtic functions and aggreates are supported.
\end_layout

\begin_layout Section
LZ4 and ZSTD Compression
\end_layout

\begin_layout Standard
User can specify two new compression algorithms 'lz4', or 'zstd' for table
 and/or column.
 LZ4 is an extremely fast compression algorithm that can be up to ten times
 faster than the zlib algorithm.
 ZSTD is slightly slower than LZ4 but offers better compression ratio.
\end_layout

\begin_layout Section
High Performance Regular Expression Engine
\end_layout

\begin_layout Standard
DeepGreen added the following regular expression functions.
 In all the following functions, a pattern must be a constant string of
 regular expression pattern.
\end_layout

\begin_layout Description
bool
\begin_inset space ~
\end_inset

re_match(text,pattern) Regular expression match.
\end_layout

\begin_layout Description
text
\begin_inset space ~
\end_inset

re_match_extract(text,pattern) Regular expression match and return first
 matching result.
 If not matched, return NULL.
\end_layout

\begin_layout Description
text[]
\begin_inset space ~
\end_inset

re_match_extract_array(text,pattern) Regular expression match and return
 all matching results in an array.
 If not matched, return NULL.
\end_layout

\begin_layout Description
text[]
\begin_inset space ~
\end_inset

re_split(text,pattern) Split text using pattern.
\end_layout

\begin_layout Description
text
\begin_inset space ~
\end_inset

re_replace(text,pattern,replacement) Replace matching part with constant
 replacement string.
\end_layout

\begin_layout Section
Approximate Count Distinct using HyperLogLog
\end_layout

\begin_layout Description
Approximate_count_distinct An aggregate that returns an approximate distinct
 count on input, within 1% accuracy.
 
\end_layout

\begin_layout Section
JSON
\end_layout

\begin_layout Standard
DeepGreen ported PostgreSQL 9.4 JSON type.
 All JSON functions and operators except table/set returning functions and
 populate_record, json_agg, are also ported.
 We expect JSON type will be ported to upstream Greenplum soon.
\end_layout

\begin_layout Section
DG Setup
\end_layout

\begin_layout Standard
All the features mentioned in this Chapter are implemented as UDT and UDF
 (User Defined Type and User Defined Functions) for DeepGreen.
 To enable these features, user should run the dg setup utiltlity.
 For example, 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

dg setup -all template1
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We recommend user to run dg setup -all template1 after installing and initiating
 DeepGreen cluster so that later created database will pickup these features
 automatically.
\end_layout

\begin_layout Standard
dg setup accepts the following options,
\end_layout

\begin_layout Description
-all Setup all features
\end_layout

\begin_layout Description
-decimal Enable decimal64/128 types and related functions.
\end_layout

\begin_layout Description
-dg_utils Enable deepgreen utilities, dg_utils are required for using dg
 transfer.
\end_layout

\begin_layout Description
-hll Enable approximate count distinct.
\end_layout

\begin_layout Description
-host Database connection information, host.
\end_layout

\begin_layout Description
-pgcryto Enable pgcrypto functions.
\end_layout

\begin_layout Description
-port Database connection information, port.
\end_layout

\begin_layout Description
-re Enable fast regular expresssion engine.
\end_layout

\begin_layout Description
-user Database connection information, user.
\end_layout

\begin_layout Description
-verbose Print verbose info.
\end_layout

\begin_layout Section
DG Transfer
\end_layout

\begin_layout Standard
Dg transfer is a high performance, scalable data transfer uitility between
 deepgreen databases.
 To set up transfer, user should have started the source and destination
 deepgreen cluster.
 dg transfer requires an xdrive cluster, usually, an xdrive cluster started
 on the destination deepgreen cluster.
 Please refer to dg xdrive on how to initialize, start xdrive cluster.
 Dg transfer also requires dg_utilts module being properly setup in source
 database.
 Once setup properly user can transfer a database using
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

dg transfer -src.host= -src.port= -src.db= -dst.host= -dst.port= -dst.db=
\end_layout

\end_inset


\end_layout

\begin_layout Standard
dg transfer takes the following options,
\end_layout

\begin_layout Description
-src.host Source deepgreen cluster connection information host.
\end_layout

\begin_layout Description
-src.port Source deepgreen cluster connection information port.
\end_layout

\begin_layout Description
-src.user Source deepgreen cluster connection user name.
\end_layout

\begin_layout Description
-src.db Source database name.
\end_layout

\begin_layout Description
-dst.host Destination deepgreen cluster host.
\end_layout

\begin_layout Description
-dst.port Destination deepgreen cluster port.
\end_layout

\begin_layout Description
-dst.user Destination deepgreen cluster user name.
\end_layout

\begin_layout Description
-dst.db Destination database name.
\end_layout

\begin_layout Description
-xdrive.hosts XDrive hosts to use for transfer.
\end_layout

\begin_layout Description
-xdrive.port If using xdrive cluster running in destintion deepgreen cluster,
 user can just specify xdrive port number instead of using xdrive.hosts.
 
\end_layout

\begin_layout Description
-schema The schema to transfer.
 If not specified, all schemas will be transfered.
\end_layout

\begin_layout Description
-table The table to transfer.
 If not specified, all tables in the schema will be transfered.
\end_layout

\begin_layout Description
-tablelist A file that each line contains schema.table to transfer.
\end_layout

\begin_layout Description
-schemaonly Transfer database schema only, do not copy data over.
\end_layout

\begin_layout Description
-ifexists=drop/keep/skip If destination table already exists, transfer should
 drop and create new table, or, keep and use the table, or, skip transfer
 data for the table.
\end_layout

\begin_layout Description
-keepowner If keep destination table owner.
\end_layout

\begin_layout Description
-index Rebuild index after transfer.
\end_layout

\begin_layout Description
-analyze Run analyze after transfer.
\end_layout

\begin_layout Description
-verify Verify the database, or schema, or table specified in the command
 contains same data.
 -verify is a readonly operation.
 It will not transfer data.
\end_layout

\begin_layout Description
-verbose Print more information during transfer.
\end_layout

\begin_layout Section
dg cluster
\end_layout

\begin_layout Standard
DG synchronous replication/HA tool.
 Install, start, stop, failover/failback HA cluster.
\end_layout

\begin_layout Section
dg sync
\end_layout

\begin_layout Standard
Asynchronous replication for backup, restore, remote site standby.
\end_layout

\end_body
\end_document
